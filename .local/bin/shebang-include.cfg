#!/usr/bin/env bash

menuStart() {
    echo '    <openbox_pipe_menu>'
}

# Usage: menuItem label command
menuItem() {
    echo "        <item label=\"$1\">"
    echo '            <action name="Execute">'
    echo '                <command>'
    echo "                    $2"
    echo '                </command>'
    echo '            </action>'
    echo '        </item>'
}

# Usage: menuSeparator [label]
menuSeparator() {
    if [[ $1 ]]; then
        echo "        <separator label=\"$1\"/>"
    else
        echo '        <separator/>'
    fi
}

# Usage menuSubmenu id label # http://openbox.org/wiki/Help:Menus
menuSubmenu() {
    echo "    <menu id=\"$1\" label=\"$2\">"
}

menuSubmenuEnd() {
    echo '    </menu>'
}

menuEnd() {
    echo '    </openbox_pipe_menu>'
}

# Usage: Call postinstall command
postinstall() {

    PKGS=(
        # --- Packages

        'arandr'               # Provide a simple visual front end for XRandR
        'bc'                   # An arbitrary precision calculator language
        'brightnessctl'        # Control backlight brightness
        'dmenu'                # Generic Menu for X
        'dunst'                # Customizable and lightweight notification-daemon
        'featherpad'           # Lightweight Qt plain text editor
        'flatpak'              # Linux application sandboxing and distribution framework
        'lxappearance'         # Set System Themes
        'lxsession'            # Lightweight Session Manager
        'openbox'              # A lightweight, powerful, and highly configurable stacking window manager
        'papirus-icon-theme'   # A simple and modern icon and cursor theme
        'pcmanfm-qt'           # The LXQt file manager
        'polybar'              # A fast and easy-to-use status bar
        'scrot'                # Simple command-line screenshot utility
        'simplescreenrecorder' # A feature-rich screen recorder that supports X11 and OpenGL
        'slock'                # A simple screen locker for X
        'tint2'                # A simple, unobtrusive and light panel for Xorg
        'xarchiver'            # A frontend to various command line archivers
        'xdotool'              # Command-line X11 automation tool

        # --- Network

        'bluez-utils'      # Development and debugging utilities for the bluetooth protocol stack
        'irssi'            # Text Based IRC
        'newsboat'         # An RSS/Atom feed reader for the text console
        'openssh'          # Premier connectivity tool for remote login with the SSH protocol
        'putty'            # A terminal integrated SSH/Telnet client
        'transmission-qt'  # BitTorrent client
        'tigervnc'         # Suite of VNC servers and clients

        # GENERAL UTILITIES ---------------------------------------------------

        'gvfs'      # An userspace virtual filesystem where mounts run as separate processes
        'gvfs-mtp'  # An userspace virtual filesystem implementation for GIO - MTP backend (Android, media player)
        'playerctl' # Utility to control media players via MPRIS

        # GRAPHICS, VIDEO AND DESIGN ------------------------------------------

        'viewnior' # A simple, fast and elegant image viewer
        'mpv'      # A free, open source, and cross-platform media player

        # PRINTING ------------------------------------------------------------

        'cups'                  # The CUPS Printing System - daemon package
        'cups-pdf'              # Printer driver for PDF writing via CUPS
        'system-config-printer' # A CUPS printer configuration tool and status applet

        # FONTS ---------------------------------------------------------------

        'ttf-liberation' # Fonts with the same metrics as Times, Arial and Courier (v2)

    )

    doas chown -hR root:root /var/lib/pacman
    doas chmod -hR 755 /var/lib/pacman
    doas rm -rfd /var/lib/pacman/db.lck
    doas pacman -Sy && doas pacman-key --init && doas pacman-key --populate archlinux

    for PKG in "${PKGS[@]}"; do
        doas pacman -Q "${PKG}" &> /dev/null
        if [ $? -ne 0 ]; then
            say "INSTALLING: ${PKG}"
            doas pacman -S --needed --noconfirm --disable-download-timeout "${PKG}"
            say "Done!"
        fi
    done

    cd /tmp
    doas rm -rfd .config*
    wget -qO config.zip https://github.com/shebang-linux/shebang-dotfiles/archive/refs/heads/main.zip && unzip config.zip && mv shebang-dotfiles-main .config
    doas rm -rfd *.zip
    doas cp -rfd /etc/skel/.config/openbox/autostart .config/openbox/autostart
    doas rm -rfd /etc/skel/.*
    doas mkdir /etc/skel/.config
    doas mkdir /etc/skel/.local
    doas cp -rfd .config/.gtkrc-2.0 /etc/skel/.gtkrc-2.0
    doas cp -rfd .config/.fonts.conf /etc/skel
    doas cp -rfd .config/.gtk-bookmarks /etc/skel
    doas cp -rfd .config/.vimrc /etc/skel
    doas cp -rfd .config/.xinitrc /etc/skel
    doas cp -rfd .config/.Xresources /etc/skel
    doas cp -rfd .config/.nanorc /etc/skel
    doas cp -rfd .config/.mkshrc /etc/skel
    doas cp -rfd .config/.profile /etc/skel
    doas cp -rfd .config/.bashrc /etc/skel
    doas cp -rfd .config/.tmux.conf /etc/skel
    doas cp -rfd .config/.newsboat /etc/skel/.newsboat
    doas cp -rfd .config/.irssi /etc/skel/.irssi
    doas cp -rfd .config/* /etc/skel/.config
    doas cp -rfd .config/.local/* /etc/skel/.local
    doas rm -rfd .config*
    doas rsync -a --exclude='backup/' --force /etc/skel/ /home/$USER/
    doas rsync -a --exclude='backup/' --force /etc/skel/ /root/
    cd /home/$USER

    doas sed -i -e 's/^(sleep 5s && exec shebang-welcome --first-run) &/#(sleep 5s && exec shebang-welcome --first-run) &/' /home/$USER/.config/openbox/autostart
    doas sed -i -e 's/^(sleep 5s && exec shebang-welcome --first-run) &/#(sleep 5s && exec shebang-welcome --first-run) &/' /root/.config/openbox/autostart
    doas sed -i -e '/^#\$(exec nice -n 19 ionice -c2 -n7 dunst -word_wrap >\/dev\/null 2>&1 | exec polyrestart | exec nice -n 19 ionice -c2 -n7 tint2 >\/dev\/null 2>&1) &/s/^#//' /home/$USER/.config/openbox/autostart
    doas sed -i -e '/^#\$(exec nice -n 19 ionice -c2 -n7 dunst -word_wrap >\/dev\/null 2>&1 | exec polyrestart | exec nice -n 19 ionice -c2 -n7 tint2 >\/dev\/null 2>&1) &/s/^#//' /root/.config/openbox/autostart

    doas sed -i -e 's/NoDisplay=true/NoDisplay=false/g' /etc/xdg/autostart/*.desktop

    doas mkdir /usr/share/desktop-directories
    doas mkdir /home/$USER/templates
    doas mkdir /home/$USER/public
    doas mkdir /home/$USER/desktop
    doas mkdir /home/$USER/documents
    doas mkdir /home/$USER/downloads
    doas mkdir /home/$USER/images
    doas mkdir /home/$USER/music
    doas mkdir /home/$USER/videos
    doas mkdir /home/$USER/.compose-cache
    doas touch /home/$USER/.XCompose
    doas chown -hR $USER:$USER /home/$USER
    doas chown -hR root:root /etc/skel/backup
    doas mkdir /opt/.var
    doas mkdir /opt/Trash
    doas chown -hR $USER:$USER /opt
    
    doas ln -s /opt/.var /home/$USER/
    doas ln -s /opt/Trash /home/$USER/.local/share/
    doas ln -s /opt/ /home/$USER/
    doas ln -s /tmp/ /home/$USER/
    doas ln -s /etc/skel/backup/ /home/$USER/
    
    gsettings set org.gnome.system.location enabled false
    gsettings set org.gnome.desktop.privacy disable-camera true
    gsettings set org.gnome.desktop.privacy disable-microphone true
    gsettings set org.gnome.desktop.privacy remember-recent-files false
    gsettings set org.gnome.desktop.privacy hide-identity true
    gsettings set org.gnome.desktop.privacy report-technical-problems false
    gsettings set org.gnome.desktop.privacy send-software-usage-stats false
    gsettings set org.gnome.login-screen allowed-failures 5
    gsettings set org.gnome.desktop.screensaver user-switch-enabled false
    gsettings set org.gnome.SessionManager logout-prompt false
    gsettings set org.gnome.desktop.media-handling autorun-never true
    gsettings set org.gnome.desktop.sound event-sounds false
    gsettings set org.gnome.settings-daemon.plugins.media-keys max-screencast-length 0
    gsettings set org.gnome.desktop.session idle-delay 0
    gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type 'nothing'
    gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-type 'nothing'
    gsettings set org.gnome.settings-daemon.plugins.power power-button-action 'interactive'
    gsettings set org.gnome.desktop.interface enable-animations false
    gsettings set org.gnome.desktop.interface scaling-factor 1
    gsettings set org.gnome.desktop.interface text-scaling-factor 1.2
    gsettings set org.gnome.mutter experimental-features "['x11-randr-fractional-scaling'"', '"'scale-monitor-framebuffer']"
    gsettings set org.gnome.settings-daemon.plugins.xsettings antialiasing 'rgba'
    gsettings set org.gnome.settings-daemon.plugins.xsettings hinting 'slight'
    gsettings set org.gnome.desktop.peripherals.keyboard delay 500
    gsettings set org.gnome.desktop.peripherals.keyboard repeat-interval 100
    gsettings set org.gnome.desktop.peripherals.mouse accel-profile flat
    gsettings set org.gtk.Settings.FileChooser show-hidden true
    gsettings set org.gnome.mutter attach-modal-dialogs false
    gsettings set org.gnome.shell.overrides attach-modal-dialogs false
    gsettings set org.gnome.shell.overrides edge-tiling true
    gsettings set org.gnome.mutter edge-tiling true
    gsettings set org.gnome.desktop.background color-shading-type vertical
    
    if [ -f "/home/$USER/.config/gtk-3.0/bookmarks" ]; then
        sed -i -e "s/\$USER/$(whoami)/g" /home/$USER/.config/gtk-3.0/bookmarks >/dev/null 2>&1
    fi
    
    if [ -f "/home/$USER/.config/user-dirs.dirs" ]; then
        sed -i -e "s/\$USER/$(whoami)/g" /home/$USER/.config/user-dirs.dirs >/dev/null 2>&1
    fi
    
    if [ -f "/home/$USER/.gtk-bookmarks" ]; then
        sed -i -e "s/\$USER/$(whoami)/g" /home/$USER/.gtk-bookmarks >/dev/null 2>&1
    fi
    
    xdg-user-dirs-update
    
    gtk-update-icon-cache
    
    fc-cache -rfv
    
    for dir in $HOME $HOME/*/; do doas touch "$dir/.metadata_never_index" "$dir/.noindex" "$dir/.nomedia" "$dir/.trackerignore"; done
    
    doas rm -rfd /usr/share/xsessions/openbox-kde.desktop

    if ! cat /proc/cmdline | grep -q -i "label"; then
        doas flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
        doas flatpak install -y flathub net.mullvad.MullvadBrowser
    fi

echo -e '[Trigger]
Operation = Install
Operation = Upgrade
Type = Package
Target = *

[Action]
When = PostTransaction
Exec = /sbin/sh -c "rm /tmp/*tar.zst* &>/dev/null"' | doas tee /etc/pacman.d/hooks/cleanup.hook

echo -e "[Trigger]
Operation = Install
Operation = Remove
Operation = Upgrade
Type = Package
Target = bash

[Action]
When = PostTransaction
Exec = /sbin/ln -sfT $(which mksh) /bin/sh" | doas tee /etc/pacman.d/hooks/set-sh-back-to-mksh.hook

    doas rm -rfd /var/lib/pacman/db.lck
    
    doas pacman -S --needed --noconfirm --disable-download-timeout artix-keyring autoconf automake bison binutils debugedit esysusers etmpfiles fakeroot file findutils flex gawk gcc gettext git grep groff gzip jq libtool m4 make musl pacman patch pkgconf sed sqlite texinfo which xclip xmlstarlet
    
    doas cp -rfd /etc/pacman.conf.bak /etc/pacman.conf

echo -e "
# Arch
#[extra]
#Include = /etc/pacman.d/mirrorlist-arch

#[community]
#Include = /etc/pacman.d/mirrorlist-arch

#[multilib]
#Include = /etc/pacman.d/mirrorlist-arch
" | doas tee -a /etc/pacman.conf

    yes | doas pacman -Scc
    
    doas sed -i -e '2c export LD_PRELOAD=' /bin/xdg-open
    
    echo -e "export LD_PRELOAD=/usr/lib/libtcmalloc_minimal.so" | tee -a /home/$USER/.config/openbox/environment
    echo -e "export LD_PRELOAD=/usr/lib/libtcmalloc_minimal.so" | doas tee -a /root/.config/openbox/environment

echo -e "nameserver 9.9.9.11
nameserver 149.112.112.11
options timeout:1 attempts:3 trust-ad single-request bogus-priv stop-dns-rebind domain-needed" | doas tee /etc/resolv.conf && doas chattr +i /etc/resolv.conf

    for IFACE in $(ip -o link show | awk -F': ' '{print $2}' | grep -v 'lo'); do doas tc qdisc replace dev $IFACE root cake >/dev/null; done

echo -e 'NAME="Shebang Linux"
PRETTY_NAME="Shebang 25.8"
ID=shebang
ID_LIKE=artix
BUILD_ID=rolling
ANSI_COLOR="38;2;23;147;209"
HOME_URL="https://shebang-linux.github.io/"
DOCUMENTATION_URL="https://github.com/shebang-linux/shebang/"
SUPPORT_URL="https://github.com/orgs/shebang-linux/discussions/"
BUG_REPORT_URL="https://github.com/shebang-linux/shebang/issues/"
LOGO=shebang-og-logo' | doas tee /etc/os-release && doas chattr +i /etc/os-release

    /var/lib/flatpak/exports/bin/net.mullvad.MullvadBrowser -headless &
    sleep 1s && pkill mullvad
    /var/lib/flatpak/exports/bin/net.mullvad.MullvadBrowser -CreateProfile "default-release-tor"
    cd /opt/.var/app/net.mullvad.MullvadBrowser/.mullvad-browser/.mullvad/mullvadbrowser/*default-release/ &&
    echo -e 'user_pref("ui.systemUsesDarkTheme", 1);
user_pref("browser.in-content.dark-mode", true);
user_pref("layout.css.prefers-color-scheme.content-override", 2);
user_pref("layout.spellcheckDefault", 0);
user_pref("browser.toolbars.bookmarks.visibility", "always");
user_pref("places.history.enabled", false);
user_pref("privacy.clearOnShutdown_v2.cookiesAndStorage", false);
user_pref("browser.privatebrowsing.autostart", false);
user_pref("network.trr.mode", 2);' | tee user.js &&
    sqlite3 places.sqlite <<EOF
INSERT INTO moz_places (url, title, visit_count, hidden, typed, frecency, last_visit_date, guid)
VALUES ('about:profiles', 'About Profiles', 0, 0, 0, -1, strftime('%s','now') * 1000, 'about_profiles');
INSERT INTO moz_bookmarks (type, fk, parent, position, title, dateAdded, lastModified, guid)
VALUES (1, (SELECT id FROM moz_places WHERE url = 'about:profiles'), 3, 0, 'About Profiles', strftime('%s','now') * 1000, strftime('%s','now') * 1000, 'about_profiles');
EOF

    cd /opt/.var/app/net.mullvad.MullvadBrowser/.mullvad-browser/.mullvad/mullvadbrowser/*default-release-tor/ &&
    echo -e 'user_pref("network.proxy.type", 1);
user_pref("network.proxy.socks", "127.0.0.1");
user_pref("network.proxy.socks_port", 9050);
user_pref("network.proxy.socks_version", 5);
user_pref("network.proxy.socks_remote_dns", true);
user_pref("layout.spellcheckDefault", 0);
user_pref("browser.toolbars.bookmarks.visibility", "always");
user_pref("browser.startup.homepage", "https://check.torproject.org/");
user_pref("network.trr.mode", 2);' | tee user.js &&
    sqlite3 places.sqlite <<EOF
INSERT INTO moz_places (url, title, visit_count, hidden, typed, frecency, last_visit_date, guid)
VALUES ('about:profiles', 'About Profiles', 0, 0, 0, -1, strftime('%s','now') * 1000, 'about_profiles');
INSERT INTO moz_bookmarks (type, fk, parent, position, title, dateAdded, lastModified, guid)
VALUES (1, (SELECT id FROM moz_places WHERE url = 'about:profiles'), 3, 0, 'About Profiles', strftime('%s','now') * 1000, strftime('%s','now') * 1000, 'about_profiles');
EOF

echo -e "/sbin/iptables -A INPUT -m conntrack --ctstate INVALID -j DROP
/sbin/iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
/sbin/iptables -A OUTPUT -m state --state INVALID -j DROP
/sbin/iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
/sbin/echo -n 1 | /sbin/tee /proc/sys/vm/compact_memory
/sbin/echo -n 5 | /sbin/tee /proc/sys/vm/laptop_mode
/sbin/echo -n auto | /sbin/tee /sys/devices/*/power/control
/sbin/echo -n auto | /sbin/tee /sys/devices/*/*/power/control
/sbin/echo -n auto | /sbin/tee /sys/bus/i2c/devices/*/power/control
/sbin/echo -n auto | /sbin/tee /sys/bus/i2c/devices/*/*/power/control
/sbin/echo -n auto | /sbin/tee /sys/bus/pci/devices/*/power/control
/sbin/echo -n auto | /sbin/tee /sys/bus/pci/devices/*/*/power/control
/sbin/echo -n guided | /sbin/tee /sys/devices/system/cpu/amd_pstate/status
/sbin/echo -n guided | /sbin/tee /sys/devices/system/cpu/intel_pstate/status
/sbin/echo -n power | /sbin/tee /sys/devices/system/cpu/cpufreq/policy*/energy_performance_preference
/sbin/echo -n powersupersave | /sbin/tee /sys/module/pcie_aspm/parameters/policy
/sbin/echo -n teo | /sbin/tee /sys/devices/system/cpu/cpuidle/current_governor
/sbin/echo -n conservative | /sbin/tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
/sbin/echo -n 1 | /sbin/tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_min_freq
/sbin/echo -n 1 | /sbin/tee /sys/devices/virtual/workqueue/cpumask
/sbin/echo -n 1 | /sbin/tee /sys/devices/virtual/workqueue/*/cpumask
/sbin/echo -n 2048 | /sbin/tee /sys/class/rtc/rtc0/max_user_freq
/sbin/echo -n 2048 | /sbin/tee /proc/sys/dev/hpet/max-user-freq
/sbin/setpci -v -s '*:*' latency_timer=10 >/dev/null 2>&1
/sbin/setpci -v -s '0:0' latency_timer=0 >/dev/null 2>&1
/sbin/wrmsr -a 0xc0011020 0 >/dev/null 2>&1
/sbin/wrmsr -a 0x1a4 0 >/dev/null 2>&1
/sbin/scx_flash >/dev/null 2>&1 &
/sbin/nvidia-smi -pm 1 >/dev/null 2>&1
/sbin/preload -c /etc/preload.conf -s '' -l '' -n19
/sbin/swapon /swap/swapfile
/sbin/mount -o nodiratime,nosuid,nodev -t tmpfs tmpfs /home/$USER
/sbin/rsync -a --exclude='backup/' /etc/skel/ /home/$USER/
/sbin/chown -hR $USER:$USER /home/$USER
/sbin/mount -o nodiratime,nosuid,nodev -t tmpfs tmpfs /tmp
/sbin/mount -o nodiratime,nosuid,nodev,noexec -t tmpfs tmpfs /var/tmp
/sbin/mount -o nodiratime,nosuid,nodev,noexec -t tmpfs tmpfs /var/cache
/sbin/mount -o nodiratime,nosuid,nodev,noexec -t tmpfs tmpfs /var/log
/sbin/mount -o remount,nodiratime,nosuid,nodev,noexec -t tmpfs shm /dev/shm
/sbin/mount -o remount,nodiratime,nosuid,nodev,noexec -t tmpfs cgroup /sys/fs/cgroup" | doas tee /etc/rc.local

    echo -e "/sbin/sync -f && /sbin/echo -n 3 | /sbin/tee /proc/sys/vm/drop_caches" | doas tee /etc/rc.shutdown

    doas chsh -s $(which mksh) $(whoami)
    doas chsh -s $(which mksh) root
    doas ln -sfT $(which mksh) /bin/sh
    
    doas rm -rfd /boot/grub/themes && doas update-grub
    
    tmux kill-server

    doas killall python
    nohup doas /sbin/prelockd -c /etc/prelockd.conf >/dev/null 2>&1 &
}
